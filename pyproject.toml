[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
version = "3.2.0"
name = "App-K8s-HF-WnB"
description = "End-to-end K8s app with Hugging Face and Weights&Biases"
license = "BSD 3-Clause"
authors = ["qte77 <qte77>"]
readme = "README.md"
repository = "https://github.com/qte77/App-K8s-HF-WnB"
documentation = "https://github.com/qte77/App-K8s-HF-WnB/docs"
keywords= ["ML", "Docker", "Kubernetes", "Hugging Face", "Weights&Biases"]

[tool.poetry.urls]
"Issues" = "https://github.com/qte77/App-K8s-HF-WnB/issues"
"Personal website" = "https://qte77.github.io"

[tool.poetry.dependencies]
python = ">=3.9"
datasets = "==2.3.*"
numpy = "==1.21.*"
protobuf = "==3.20.*"
pyyaml = "==6.0.*"
scipy = "*"
sklearn = "*"
torch = "==1.11.*"
transformers = "==4.19.*"
wandb = "==0.13.*"
omegaconf = "*"
pydantic = "*"
# https://download.pytorch.org/whl/cu113/torch-1.11.0%2Bcu113-cp38-cp38-linux_x86_64.whl
# git+https://github.com/huggingface/transformers

[tool.poetry.dev-dependencies]
black = "*"
"blacken-docs" = "*"
bump2version = "*"
coverage = {extras = ["toml"], version = "*"}
flake8 = "*"
interrogate = "*"
isort = "*"
pyupgrade = "*"
pytest = "*"
tuna = "*"
# mypy = "*"
# pdoc = "*"
# pipenv = "*"
# "pre-commit" = "*"
# "pytest-cov" = "*"
# sphinx = "*"
# tox = "*"
# watchdog = "==2.1.*"

[tool.isort]
profile = "black"
src_paths = ["app", "tests"]

[tool.black]
line_length = 88
src_paths = ["app", "tests"]
target-version = ["py37", "py38", "py39", "py310"]

# https://pypi.org/project/interrogate/
[tool.interrogate]
fail-under = 95
exclude = ["setup.py", "docs", "build", "tests"]
# ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
# possible values: 0 (minimal output), 1 (-v), 2 (-vv)
verbose = 0

# https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml
# https://mypy.readthedocs.io/en/stable/config_file.html#example-pyproject-toml
[tool.mypy]
warn_unused_configs = true
warn_unused_ignores = true
warn_unreachable = true
warn_return_any = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-rfEX -svv --color=yes --code-highlight=yes --doctest-modules"
testpaths = [
    "tests"
]
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
# norecursedirs = [
#    "tests/example_scripts"
# ]
# markers = [
#    "requires_gpu: mark a test that requires a GPU to run.",
#    "slow: mark a test that takes a long time to run.",
# ]

# https://coverage.readthedocs.io/en/coverage-5.5/config.html
[tool.coverage.run]
source = "app"
omit = "*/__main__.py"

[tool.coverage.report]
show_missing = true